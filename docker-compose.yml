---

x-logging: &logging
  logging:
    driver: "json-file"
    options:
      max-size: 10m
      max-file: "3"

version: "3.4"

networks:
  dev_network_youtube-stats:
services:

  nifi:
    image: apache/nifi:1.25.0
    <<: *logging
    restart: unless-stopped
    hostname: nifi-youtube-stats
    container_name: nifi-youtube-stats
    ports:
      - 8080:8080/tcp
    networks:
      - dev_network_youtube-stats
    environment:
      NIFI_WEB_HTTP_HOST: 0.0.0.0
      NIFI_WEB_HTTP_PORT: 8080
      NIFI_WEB_PROXY_HOST: 0.0.0.0:8080
      SINGLE_USER_CREDENTIALS_USERNAME: admin12345678
      SINGLE_USER_CREDENTIALS_PASSWORD: admin12345678
      NIFI_ZK_CONNECT_STRING: zookeeper:2181
      NIFI_JVM_HEAP_INIT: 512m
      NIFI_JVM_HEAP_MAX: 1024m
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "nifi-conf:/opt/nifi/nifi-current/conf"
      - "nifi-content_repository:/opt/nifi/nifi-current/content_repository"
      - "nifi-database_repository:/opt/nifi/nifi-current/database_repository"
      - "nifi-flowfile_repository:/opt/nifi/nifi-current/flowfile_repository"
      - "nifi-logs:/opt/nifi/nifi-current/logs"
      - "nifi-provenance_repository:/opt/nifi/nifi-current/provenance_repository"
      - "nifi-state:/opt/nifi/nifi-current/state"
      - "nifi-utils:/opt/nifi/nifi-current/utils"
      - "${PWD}/data/utils/postgresql-42.7.2.jar:/opt/jars/postgresql-42.7.2.jar"

  zookeeper:
    image: zookeeper:3.8.0
    <<: *logging
    restart: unless-stopped
    hostname: zookeeper-youtube-stats
    container_name: zookeeper-youtube-stats
    networks:
      - dev_network_youtube-stats
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "zookeeper-data:/data"
      - "zookeeper-datalog:/datalog"
    environment:
      - ZOO_4LW_COMMANDS_WHITELIST=ruok
    healthcheck:
      test: echo ruok | nc -w 2 zookeeper 2181 | grep -q imok
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  timescaledb:
    image: timescale/timescaledb:2.7.0-pg14
    restart: unless-stopped
    hostname: timescaledb-youtube-stats
    container_name: timescaledb-youtube-stats
    ports:
      - "5432:5432"
    networks:
      - dev_network_youtube-stats
    environment:
      TZ: Europe/Madrid
      PGTZ: Europe/Madrid
      POSTGRES_DB: dev
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      TIMESCALEDB_TELEMETRY: "off"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "timescaledb-data:/var/lib/postgresql/data"
      - "./data/utils/00-db.sql:/docker-entrypoint-initdb.d/00-db.sql"

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    <<: *logging
    restart: unless-stopped
    hostname: kafka-youtube-stats
    container_name: kafka-youtube-stats
    networks:
      - dev_network_youtube-stats
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-youtube-stats:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-youtube-stats:9092,PLAINTEXT_INTERNAL://kafka-youtube-stats:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "kafka-secrets:/etc/kafka/secrets"
      - "kafka-data:/var/lib/kafka/data"

  grafana:
    image: grafana/grafana:10.4.2
    restart: unless-stopped
    hostname: grafana-youtube-stats
    container_name: grafana-youtube-stats
    ports:
      - "3000:3000"
    networks:
      - dev_network_youtube-stats
    environment:
      - GF_INSTALL_PLUGINS=volkovlabs-echarts-panel,gapit-htmlgraphics-panel
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/
      - GF_SECURITY_ADMIN_PASSWORD=admin123456789
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "grafana-data:/var/lib/grafana"

volumes:

  nifi-conf:
    driver_opts:
      type: "none"
      device: "${PWD}/data/nifi/conf"
      o: "bind"
  nifi-content_repository:
    driver_opts:
      type: "none"
      device: "${PWD}/data/nifi/content_repository"
      o: "bind"
  nifi-database_repository:
    driver_opts:
      type: "none"
      device: "${PWD}/data/nifi/database_repository"
      o: "bind"
  nifi-flowfile_repository:
    driver_opts:
      type: "none"
      device: "${PWD}/data/nifi/flowfile_repository"
      o: "bind"
  nifi-logs:
    driver_opts:
      type: "none"
      device: "${PWD}/data/nifi/logs"
      o: "bind"
  nifi-provenance_repository:
    driver_opts:
      type: "none"
      device: "${PWD}/data/nifi/provenance_repository"
      o: "bind"
  nifi-state:
    driver_opts:
      type: "none"
      device: "${PWD}/data/nifi/state"
      o: "bind"
  nifi-utils:
    driver_opts:
      type: "none"
      device: "${PWD}/data/nifi/utils"
      o: "bind"
  timescaledb-data:
    driver_opts:
      type: "none"
      device: "${PWD}/data/timescaledb/"
      o: "bind"
  zookeeper-data:
    driver_opts:
      type: "none"
      device: "${PWD}/data/zookeeper/data"
      o: "bind"
  zookeeper-datalog:
    driver_opts:
      type: "none"
      device: "${PWD}/data/zookeeper/datalog"
      o: "bind"
  kafka-secrets:
    driver_opts:
      type: "none"
      device: "${PWD}/data/kafka/secrets"
      o: "bind"
  kafka-data:
    driver_opts:
      type: "none"
      device: "${PWD}/data/kafka/data"
      o: "bind"
  grafana-data:
    driver_opts:
      type: "none"
      device: "${PWD}/data/grafana"
      o: "bind"
